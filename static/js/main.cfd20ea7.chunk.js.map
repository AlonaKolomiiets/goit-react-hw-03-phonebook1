{"version":3,"sources":["components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","initialState","name","number","state","handleSubmit","e","preventDefault","singleContact","id","uuidv4","props","addToPhonebook","setState","inputHandler","target","value","this","onSubmit","className","styles","contactFormLable","onChange","type","placeholder","Component","ContactListItem","deleteContact","contactListItemBtn","onClick","ContactList","filteredContacts","map","contact","Filter","filter","FilterLable","App","contacts","newContact","find","toLowerCase","alert","prev","filterContacts","insensitiveValue","length","includes","prevProps","prevState","nextContacts","localStorage","setItem","JSON","stringify","contactsFromStorage","parse","getItem","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd20ea7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItemBtn\":\"ContactListItem_contactListItemBtn__Zz2BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLable\":\"Filter_FilterLable__3aYIw\"};","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  initialState = {\n    name: \"\",\n    number: \"\",\n  };\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const singleContact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n    this.props.addToPhonebook(singleContact);\n    this.setState({ ...this.initialState });\n  };\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label className={styles.contactFormLable}>\n            <input\n              onChange={this.inputHandler}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name...\"\n              value={name}\n            ></input>\n          </label>\n          <label className={styles.contactFormLable}>\n            <input\n              onChange={this.inputHandler}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter number...\"\n              value={number}\n            ></input>\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  addToPhonebook: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"./ContactListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <>\n      <li key={id}>\n        {name}:{number}\n        <button\n          className={styles.contactListItemBtn}\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ filteredContacts, deleteContact }) => {\n  return (\n    <ul>\n      {filteredContacts.map((contact) => (\n        <ContactListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, inputHandler }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <label className={styles.FilterLable}>\n        <input\n          onChange={inputHandler}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name...\"\n          value={filter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  inputHandler: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  componentDidMount() {\n    try {\n      const contactsFromStorage = JSON.parse(localStorage.getItem(\"contacts\"));\n      contactsFromStorage && this.setState({ contacts: contactsFromStorage });\n    } catch {\n      console.log(\"Невалидный JSON\");\n    }\n  }\n\n  inputHandler = ({ target }) => {\n    const { value, name } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  addToPhonebook = (newContact) => {\n    this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState((prev) => ({\n          contacts: [...prev.contacts, newContact],\n        }));\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const insensitiveValue = filter.toLowerCase();\n    if (filter.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(insensitiveValue)\n      );\n    } else {\n      return contacts;\n    }\n  };\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    });\n  };\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addToPhonebook={this.addToPhonebook} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} inputHandler={this.inputHandler} />\n        <ContactList\n          filteredContacts={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormLable\":\"ContactForm_contactFormLable__24Pjp\"};"],"sourceRoot":""}